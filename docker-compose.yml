version: '3.8'
services:
  db:
    container_name: postgres-db
    image: 'postgres'
    ports:
      - '5411:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sportsdb
    networks:
      - app-tier
    volumes:
      - 'postgres:/var/lib/postgresql/data'

  app:
    container_name: app
    restart: always
    build: .
    environment:
      - PORT=${PORT:-8080}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin5}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@host.docker.internal:5411/sportsdb?connect_timeout=300}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-12345}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-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}
    healthcheck:
      test: 'curl http://localhost8080/health'
      interval: 1m50s
      timeout: 50s
      retries: 5
      start_period: 30s
    ports:
      - '8080:8080'
      - '5555:5555'
    links:
      - db
    depends_on:
      - db
      - migration
    networks:
      - app-tier

  migration:
    container_name: migration
    restart: 'no'
    command: >
      sh -c "echo migration | npx prisma migrate dev && npx prisma db seed"
    build: .
    profiles: ['migration']
    environment:
      - PORT=${PORT:-8080}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin5}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@host.docker.internal:5411/sportsdb?connect_timeout=300}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-12345}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-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}
    links:
      - db
    depends_on:
      - db
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge

volumes:
  postgres: {}
